plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "org.quiltmc.quilt-mappings-on-loom" version "4.2.0"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "create_dragon_lib-fabric-${artifact_minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://hephaestus.dev/release" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev/releases/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.gegy.dev" }
    // Old and unused
    //maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://modmaven.dev" }
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings(loom.layered {
//        it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.qm_version}:v2"))
        it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    modImplementation "com.simibubi.create:create-fabric-1.19.2:${create_version}"
}

processResources {
    // require dependencies to be the version compiled against or newer
    Map<String, String> properties = new HashMap<>()
    properties.put("version", mod_version)
    properties.put("fabric_loader_version", fabric_loader_version)
    properties.put("fabric_api_version", fabric_api_version)
    properties.put("create_version", create_version)
    properties.put("minecraft_version", minecraft_version)

    properties.forEach((k, v) -> inputs.property(k, v))

    filesMatching("fabric.mod.json") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/generated/resources'
            ]
        }
    }
}

// configure the maven publication
publishing {
    publications {
        release(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
        snapshot(MavenPublication) {
            artifactId = archivesBaseName
            version = "${version}-SNAPSHOT.${new Date().format('yyyyMMdd')}"
            from components.java
        }
    }
    repositories {
        maven {
            name = "release"
            url = "https://maven.dragons.plus/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = "snapshot"
            url = "https://maven.dragons.plus/snapshots"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}